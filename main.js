(()=>{"use strict";var e=document.querySelector(".profile__button_type_edit"),t=document.querySelector(".profile__button_type_add"),n=(document.querySelector(".cards__button_type_del"),document.querySelector(".profile__avatar")),r=document.querySelector(".popup_theme_profile"),o=document.querySelector(".popup_theme_place"),i=document.querySelector(".popup_theme_image"),a=document.querySelector(".popup_theme_avatar"),u=document.querySelector(".popup_theme_delete"),c=document.querySelector(".popup__button-close_theme_profile"),s=document.querySelector(".popup__button-close_theme_place"),l=document.querySelector(".popup__button-close_theme_image"),f=document.querySelector(".popup__button-close_theme_avatar"),p=document.querySelector(".popup__button-close_theme_delete"),h=i.querySelector(".popup__photo"),_=i.querySelector(".popup__photo-title"),d=document.querySelector(".profile__name"),y=document.querySelector(".profile__text"),v=document.querySelector(".profile__image"),m=document.querySelector(".popup__item_type_name"),b=document.querySelector(".popup__item_type_info"),k=document.querySelector(".popup__container"),g=(document.querySelector(".popup__form"),k.querySelector("form[name=record]")),w=a.querySelector("form[name=photo]"),S=(document.querySelector(".popup__form_theme_place"),o.querySelector("form[name=cards]")),E=(document.querySelector(".popup__item_type_newname"),document.querySelector(".popup__item_type_link"),document.querySelector(".cards"));function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}document.querySelector(".popup__button-save_yes");var C=function(){function e(t,n,r){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=t,this._selectorTemplate=n,this._onImageClick=r.imageClick,this._onRemove=r.remove,this._onLike=r.like,this._removeLike=r.removeLike,this._element=this._getTemplate(),this._image=this._element.querySelector(".cards__image"),this._title=this._element.querySelector(".cards__title"),this._likeButton=this._element.querySelector(".cards__button_type_like"),this._removeButton=this._element.querySelector(".cards__button_type_del"),this._likeCount=this._element.querySelector(".cards__like-number"),this._isLiked=this._data.likes.find((function(e){return e._id===o._data.currentUserId})),this._image.src=this._data.link,this._image.alt=this._data.name,this._title.textContent=this._data.name,this._likeCount.textContent=this._data.likes.length,this._setEventListeners()}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._selectorTemplate).content.querySelector(".cards__item").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){e._handlerLike()})),this._data.owner._id===this._data.currentUserId?this._removeButton.addEventListener("click",(function(){e._onRemove(e._data,(function(){return e._handlerRemove()}))})):this._removeButton.remove(),this._image.addEventListener("click",(function(){e._onImageClick(e._data)})),this._isLiked&&this._likeButton.classList.add("cards__button_type_like-active")}},{key:"_handlerLike",value:function(){var e=this;this._isLiked=this._data.likes.find((function(t){return t._id===e._data.currentUserId})),this._isLiked?(this._likeButton.classList.remove("cards__button_type_like-active"),this._removeLike(this._data,(function(t){console.log("Работаю removeLike",{newLikes:t}),e._data.likes=t,e._likeCount.textContent=e._data.likes.length}))):(this._likeButton.classList.add("cards__button_type_like-active"),this._onLike(this._data,(function(t){console.log("Работаю onLike",{newLikes:t}),e._data.likes=t,e._likeCount.textContent=e._data.likes.length})))}},{key:"_handlerRemove",value:function(){this._element.remove(),this._element=null}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=n}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"addNewItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var q=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"_setEventListeners",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"deleteMistakes",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)})),this._toggleButtonState()}},{key:"disableButton",value:function(){this._buttonElement.setAttribute("disabled",!0),this._buttonElement.classList.add(this._config.inactiveButtonClass)}},{key:"enableButton",value:function(){this._buttonElement.removeAttribute("disabled",!1),this._buttonElement.classList.remove(this._config.inactiveButtonClass)}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.disableButton():this.enableButton()}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),n.textContent=t,n.classList.add(this._config.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));t.textContent="",e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClass)}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();const R={formSelector:".popup__form",inputSelector:".popup__item",submitButtonSelector:".popup__button-save",inactiveButtonClass:"popup__button_inactive",inputErrorClass:"popup__item_type_error",errorClass:"popup__item-error_active"};function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._closeButton=n,this._saveButton=this._popup.querySelector(".popup__button-save"),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleOverlayClose",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._closeButton.addEventListener("click",(function(){e.close()})),this._popup.addEventListener("click",(function(t){e._handleOverlayClose(t)}))}},{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_opened")}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"addSaving",value:function(){this._saveButton.textContent="Сохранение..."}},{key:"deleteSaving",value:function(e){this._saveButton.textContent=e}}])&&I(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function T(e){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},T(e)}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function x(){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=A(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},x.apply(this,arguments)}function A(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=N(e)););return e}function D(e,t){return D=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},D(e,t)}function V(e,t){if(t&&("object"===T(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function N(e){return N=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},N(e)}var M=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&D(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=N(r);if(o){var n=N(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return V(this,e)});function a(e,t,n,r){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(o=i.call(this,e,t))._image=n,o._title=r,o}return t=a,(n=[{key:"open",value:function(e){var t=e.data;this._image.src=t.link,this._image.alt=t.name,this._title.textContent=t.name,x(N(a.prototype),"open",this).call(this)}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(B);function J(e){return J="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},J(e)}function G(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function H(){return H="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=z(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},H.apply(this,arguments)}function z(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=K(e)););return e}function $(e,t){return $=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},$(e,t)}function F(e,t){if(t&&("object"===J(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function K(e){return K=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},K(e)}var Q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&$(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=K(r);if(o){var n=K(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return F(this,e)});function a(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e,n))._handleSubmit=t,r._form=r._popup.querySelector(".popup__form"),r._inputList=r._form.querySelectorAll(".popup__item"),r._setEventListeners=r.setEventListeners(),r}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit(e._getInputValues())})),H(K(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){this._form.reset(),H(K(a.prototype),"close",this).call(this)}}])&&G(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(B);function W(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var X=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t,this._info=n,this._avatar=r}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,job:this._info.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e._id;this._name.textContent=t,this._info.textContent=n,this._id=r}},{key:"setUserAvatar",value:function(e){var t=e.avatar;this._avatar.src=t}}])&&W(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function Y(e){return Y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Y(e)}function Z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ee(){return ee="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=te(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},ee.apply(this,arguments)}function te(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=oe(e)););return e}function ne(e,t){return ne=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ne(e,t)}function re(e,t){if(t&&("object"===Y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function oe(e){return oe=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},oe(e)}var ie=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ne(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=oe(r);if(o){var n=oe(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return re(this,e)});function a(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e,n))._handleSubmit=t,r._form=r._popup.querySelector(".popup__form"),r}return t=a,(n=[{key:"open",value:function(e,t){ee(oe(a.prototype),"open",this).call(this),this._currentData=e,this._removeCallback=t}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit(e._currentData,e._removeCallback)})),ee(oe(a.prototype),"setEventListeners",this).call(this)}}])&&Z(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(B);function ae(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ue(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var ce=new(function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"setUserInfo",value:function(e){var t=this,n=e.name,r=e.about;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:n,about:r})}).then((function(e){return t._handleResponse(e)}))}},{key:"setNewCard",value:function(e){var t=this,n=e.name,r=e.link;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:n,link:r})}).then((function(e){return t._handleResponse(e)}))}},{key:"setProfileAvatar",value:function(e){var t=this,n=e.avatar;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:n})}).then((function(e){return t._handleResponse(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"likeCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"likeRemove",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}}])&&ae(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-48",headers:{authorization:"2416fc82-bfbc-4b78-a4fd-442dace64f7e","Content-Type":"application/json"}}),se=new q(R,g);se.enableValidation();var le=new q(R,S);le.enableValidation();var fe=new q(R,w);fe.enableValidation();var pe=new X(d,y,v),he=new ie(u,(function(e,t){he.addSaving(),ce.deleteCard(e._id).then((function(){t(),he.close()})).catch((function(e){console.log(e)})).finally((function(){return he.deleteSaving("Да")}))}),p),_e=new M(i,l,h,_);_e.setEventListeners(),he.setEventListeners();var de=new Q(r,(function(e){var t=e.name,n=e.job;de.addSaving(),ce.setUserInfo({name:t,about:n}).then((function(e){pe.setUserInfo({name:e.name,about:e.about}),de.close()})).catch((function(e){console.log(e)})).finally((function(){return de.deleteSaving("Сохранить")}))}),c),ye=new Q(o,(function(e){ye.addSaving(),ce.setNewCard({name:e.newname,link:e.link}).then((function(e){ke.addNewItem(be(e)),ye.close()})).catch((function(e){console.log(e)})).finally((function(){return ye.deleteSaving("Создать")}))}),s),ve=new Q(a,(function(e){var t=e.avatar;ve.addSaving(),ce.setProfileAvatar({avatar:t}).then((function(e){pe.setUserAvatar({avatar:e.avatar}),ve.close()})).catch((function(e){console.log(e)})).finally((function(){return ve.deleteSaving("Сохранить")}))}),f),me=0,be=function(e){return e.currentUserId=me,new C(e,"#card-template",{imageClick:Ee,remove:Se,like:ge,removeLike:we}).generateCard()},ke=new j({renderer:function(e){ke.addItem(be(e))}},E);function ge(e,t){ce.likeCard(e._id).then((function(e){t(e.likes)})).catch((function(e){console.log(e)}))}function we(e,t){ce.likeRemove(e._id).then((function(e){t(e.likes)})).catch((function(e){console.log(e)}))}function Se(e,t){he.open(e,t)}function Ee(e){var t=e.name,n=e.link;_e.open({data:{name:t,link:n}})}e.addEventListener("click",(function(){var e=pe.getUserInfo();m.value=e.name,b.value=e.job,de.open(),se.deleteMistakes()})),t.addEventListener("click",(function(){S.reset(),le.deleteMistakes(),ye.open()})),n.addEventListener("click",(function(){fe.deleteMistakes(),ve.open()})),Promise.all([ce.getUserInfo(),ce.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return ue(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ue(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];pe.setUserInfo(o),pe.setUserAvatar(o),me=o._id,ke.renderItems(i,o._id)})).catch((function(e){console.log(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,